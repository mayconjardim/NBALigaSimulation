@inject NavigationManager NavigationManager
@inject IPlayerService PlayerService

<div class="input-group">
    <input @bind-value="searchText" @bind-value:event="oninput"
           type="search" list="players" @onkeyup="HandleSearch"
           class="form-control"
           placeholder="Procure um Jogador..."
           @ref="searchInput"
           @onchange="NavigateToPlayer"
    />
    <datalist id="players">
        @foreach (var suggestion in suggestions)
        {
            <option value="@suggestion.Id" label="@suggestion.Name">@suggestion.Name</option>
        }
    </datalist>
</div>

@code {

    private string searchText = string.Empty;
    private List<PlayerSimpleDto> suggestions = new List<PlayerSimpleDto>();
    protected ElementReference searchInput;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await searchInput.FocusAsync();
        }
    }

    public void NavigateToPlayer()
    {
            if (!string.IsNullOrEmpty(searchText) && int.TryParse(searchText, out int selectedPlayerId))
            {
                NavigationManager.NavigateTo($"player/{selectedPlayerId}", forceLoad: true); 
                searchText = string.Empty;
            }
    }

    public async Task HandleSearch(KeyboardEventArgs args)
    {
            if (args.Key == null || args.Key.Equals("Enter"))
            {
                NavigateToPlayer();
            }
            else if (searchText.Length > 1)
            {

               ServiceResponse<List<PlayerSimpleDto>> response = await PlayerService.GetPlayersSearchSuggestions(searchText);
               if (response.Success) 
               {
                        suggestions = response.Data; 
               }
            }
    }

}
