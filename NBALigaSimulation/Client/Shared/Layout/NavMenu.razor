﻿
@inject ILocalStorageService LocalStorage
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@inject ITeamService TeamService

<MudNavMenu>
   
   <img src="images/utils/logo.svg" width="45%" style="display:block; margin:15px auto; text-align:center;"/>


    <MudNavLink Href="/" Icon="@Icons.Material.Filled.Dashboard" Match="NavLinkMatch.All">Home</MudNavLink>

     <MudNavGroup Icon="@Icons.Material.Filled.EmojiEvents" Title="Liga" Expanded="false">
        <MudNavLink Href="/transactions" Icon="@Icons.Material.Filled.SwapHorizontalCircle" Match="NavLinkMatch.Prefix">Transações</MudNavLink>
        <MudNavLink Href="/picks" Icon="@Icons.Material.Filled.Elevator" Match="NavLinkMatch.Prefix">Draft Picks</MudNavLink>
        <MudNavLink Href="/finances" Icon="@Icons.Material.Filled.AttachMoney"  Match="NavLinkMatch.Prefix">Finanças</MudNavLink>
        <MudNavLink Href="/awards" Icon="@Icons.Material.Filled.MilitaryTech"  Match="NavLinkMatch.Prefix">Prêmios</MudNavLink>
    </MudNavGroup>

    <MudNavGroup Icon="@Icons.Material.Filled.Groups" Title="Times" Expanded="false">

     <MudNavGroup Icon="@Icons.Material.Filled.East" Title="East" Expanded="false">
        @foreach (var team in East)
            {
                <MudNavLink Href="@string.Format("/team/{0}", team.Id)"  Match="NavLinkMatch.Prefix">
                     <MudAvatar Style="vertical-align: middle; background: none" Size="Size.Small" Image=@($"Images/logos/{team.Abrv}.svg") Square="true" />
                @team.Name</MudNavLink>
            }
     </MudNavGroup>

      <MudNavGroup Icon="@Icons.Material.Filled.West" Title="West" Expanded="false">

        @foreach (var team in West)
        {
                <MudNavLink Href="@string.Format("/team/{0}", team.Id)"  Match="NavLinkMatch.Prefix">
                     <MudAvatar Style="vertical-align: middle; background: none" Size="Size.Small" Image=@($"Images/logos/{team.Abrv}.svg") Square="true" />
                @team.Name</MudNavLink>
        }

     </MudNavGroup>

    </MudNavGroup>

    <MudNavLink Href="/players" Icon="@Icons.Material.Filled.Person" Match="NavLinkMatch.Prefix">Jogadores</MudNavLink>

    <MudNavGroup Icon="@Icons.Material.Filled.Percent" Title="Estatísticas" Expanded="false">
        <MudNavLink Href="/stats/players" Icon="@Icons.Material.Filled.QueryStats" Match="NavLinkMatch.Prefix">Líderes da Liga</MudNavLink>
        <MudNavLink Href="/stats/teams" Icon="@Icons.Material.Filled.QueryStats" Match="NavLinkMatch.Prefix">Times Líderes</MudNavLink>
    </MudNavGroup>

  
      <MudNavGroup Icon="@Icons.Material.Filled.AccountTree" Title="Playoffs" Expanded="false">
        <MudNavLink Href="/playoffs" Icon="@Icons.Material.Filled.AccountTree" Match="NavLinkMatch.Prefix">Tabela</MudNavLink>
        <MudNavLink Href="/playoffs/stats/players" Icon="@Icons.Material.Filled.Percent" Match="NavLinkMatch.Prefix">Líderes dos Playoffs</MudNavLink>
        <MudNavLink Href="/playoffs/stats/teams" Icon="@Icons.Material.Filled.QueryStats" Match="NavLinkMatch.Prefix">Times Líderes dos Playoffs</MudNavLink>

    </MudNavGroup>


    <MudNavGroup Icon="@Icons.Material.Filled.BusinessCenter"Title="Pós-Temporada" Expanded="false">
        <MudNavLink Href="/draft" Icon="@Icons.Material.Filled.Elevator" Match="NavLinkMatch.Prefix">Draft</MudNavLink>
        <MudNavLink Href="/loteria" Icon="@Icons.Material.Filled.Dvr" Match="NavLinkMatch.Prefix">Draft Loteria</MudNavLink>
    </MudNavGroup>

     <AuthorizeView>
            <Authorized>
                <MudNavLink href="profile" Icon="@Icons.Material.Filled.Dashboard" Match="NavLinkMatch.Prefix">Dashboard</MudNavLink>
                <hr />
                 <MudNavLink  @onclick="Logout" Icon="@Icons.Material.Filled.Logout" Match="NavLinkMatch.Prefix">Logout</MudNavLink>
            </Authorized>
            <NotAuthorized>
               <MudNavLink Href="/login" Icon="@Icons.Material.Filled.Login" Match="NavLinkMatch.Prefix" >Login</MudNavLink>
            </NotAuthorized>
     </AuthorizeView>

</MudNavMenu>

    @code {
    string message = "";
    private List<TeamSimpleDto> East = new List<TeamSimpleDto>();
    private List<TeamSimpleDto> West = new List<TeamSimpleDto>();

    private bool showUserMenu = false;

    private string UserMenuCssClass => showUserMenu ? "show-menu" : null;

    protected override async Task OnInitializedAsync()
    {
 
        var result = await TeamService.GetAllTeams();
        if (!result.Success)
        {
            message = result.Message;
        }
        else
        {
            East = result.Data.Where(t => t.Conference == "East").ToList();
            West = result.Data.Where(t => t.Conference == "West").ToList();
        }
    }


    private void ToggleUserMenu()
    {
        showUserMenu = !showUserMenu;
    }

    private async Task HideUserMenu()
    {
        await Task.Delay(200);
        showUserMenu = false;
    }

    private async Task Logout()
    {
        await LocalStorage.RemoveItemAsync("authToken");
        await AuthenticationStateProvider.GetAuthenticationStateAsync();
        NavigationManager.NavigateTo("");
    }
}