﻿
@page "/profile"
@attribute [Authorize]
@inject IAuthService AuthService
@inject ITeamService TeamService
@inject IPlayerService PlayerService
@inject NavigationManager NavigationManager



@if (team == null)
{
 @message
} else
{
 <MudContainer>
<CascadingAuthenticationState>
 <AuthorizeView>

 
    <div class="card @team.Abrv">
        <h1>@team.Region @team.Name</h1>
    </div>
  
    <MudGrid Class="d-flex justify-center" Style="margin-top: 10px;">
     <MudButtonGroup Color="Color.Primary" Variant="Variant.Outlined">
       <MudButton Size="Size.Small" StartIcon="@Icons.Material.Filled.CompareArrows" IconColor="Color.Primary">Trade HQ</MudButton>
       <MudButton Size="Size.Small" StartIcon="@Icons.Material.Filled.BusinessCenter" IconColor="Color.Primary">FA HQ</MudButton>
       <MudButton Size="Size.Small" Href="/change-password"  StartIcon="@Icons.Material.Filled.Password" IconColor="Color.Primary">Trocar Senha</MudButton>
     </MudButtonGroup>
    </MudGrid>

     <h1 class="d-flex justify-center">DEPTH CHART & GAMEPLAN</h1> 
   

<div class="container">
    
     <div class="parent border" >
         
       <div class="div1"> 

         <div class="roster-order">&nbsp;</div>
         <div class="roster-player">
              <span style="width: 150px">NAME</span>
              <span class="drag40">POS</span>
              <span class="drag40">AGE</span>
              <span class="drag40">OVR</span>
              <span style="width: 100px">PT</span>
         </div>    
   
       </div>

      <div class="div2"> 

           @for (int i = 0; i < team.Players.Count; i++)
            {
                <div class="roster-order @(i < 5 ? "starter" : "bench")">&nbsp;</div>              
            }

      </div>



      <div class="div3"> 
        <Dropzone Context="data" Items="team.Players" InstantReplace="true" TItem="PlayerCompleteDto" OnItemDrop="@((p)=>OnItemDrop(p))" OnReplacedItemDrop="@((p)=>OnReplacedItemDrop(p))">
       
            <div class="roster-player">
              <span style="width: 150px">@data.Name</span>
              <span  class="drag40">@data.Pos</span>
              <span  class="drag40">@Age(@data.Born.Year, @data.Ratings.Last().Season)</span>
              <span  class="drag40">@data.Ratings.Last().Ovr</span>
              <MudSelect Style="width: 100px;" Dense="true" @bind-Value="@data.PtModifier" Margin="Margin.Dense" T="double" SelectedValuesChanged="@(v => UpdatePtModifier(v, data.Id))">
                    @foreach (var pt in PtOptions)
                    {
                        <MudSelectItem T="double" Value="@pt">@GetOptionLabel(pt)</MudSelectItem>
                    }
              </MudSelect>
             </div>

        </Dropzone>
          <div class="d-flex justify-center">
        <MudButton Style="margin: 10px" Variant="Variant.Outlined" disabled="@(UpdatedPlayerList.Count <= 0)" OnClick="UpdateRoster">Save Depth</MudButton>

     </div>
       </div>


     </div>

     <div class="gameplan border">
        
        <div class="offense">
         
            <EditForm Context="gameplan" Model="teamGameplan" OnSubmit="UpdateGameplan">
            <MudPaper Width="300px">
                <MudList Clickable="true">
                    <MudListItem Icon="@Icons.Material.Filled.Speed">
                        <div class="gameplan-select">
                            <p>Pace</p>
                            <select @bind="teamGameplan.Pace" class="mud-input mud-select-input" @oninput="HandleEventChanged">
                                @foreach (var option in GPOptions)
                                {
                                    <option  value="@option">@GetGP(option)</option>
                                }
                            </select>
                        </div>
                    </MudListItem>

                    <MudListItem Icon="@Icons.Material.Filled.SwitchLeft">
                        <div class="gameplan-select">
                            <p>Motion</p>
                            <select @bind="teamGameplan.Motion" class="mud-input mud-select-input" @oninput="HandleEventChanged">
                                @foreach (var option in GPOptions)
                                {
                                    <option value="@option">@GetGP(option)</option>
                                }
                            </select>
                        </div>
                    </MudListItem>

                    <MudListItem Icon="@Icons.Material.Filled.CenterFocusStrong">
                        <div class="gameplan-select">
                            <p>Focus</p>
                            <select @bind="teamGameplan.Focus" class="mud-input mud-select-input" @oninput="HandleEventChanged">
                                @foreach (var option in GPOptions)
                                {
                                    <option value="@option">@GetGP(option)</option>
                                }
                            </select>
                        </div>
                    </MudListItem>

                    <MudListItem Icon="@Icons.Material.Filled.Shield">
                        <div class="gameplan-select">
                            <p>Defense</p>
                            <select @bind="teamGameplan.Defense" class="mud-input mud-select-input" @oninput="HandleEventChanged">
                                @foreach (var option in DefenseOptions)
                                {
                                    <option value="@option">@GetDefense(option)</option>
                                }
                            </select>
                        </div>
                    </MudListItem>
                </MudList>
            </MudPaper>

                <div class="d-flex justify-center">
                    <MudButton Style="margin: 10px" Variant="Variant.Outlined" disabled="@(!isDirty)" ButtonType="ButtonType.Submit">Save Gameplan</MudButton>

                 </div>

        </EditForm>

        </div>

     </div>

   
 </div>


 
 </AuthorizeView>
 </CascadingAuthenticationState>
 </MudContainer>

}
s