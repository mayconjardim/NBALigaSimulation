@page "/trades"
@attribute [Authorize]
@inject IAuthService AuthService
@inject ITradeService TradeService


 <MudContainer>
<CascadingAuthenticationState>
 <AuthorizeView>

     <h1 class="d-flex justify-center" style="margin: 20px;">PROPOSTAS DE TROCA</h1> 

     <div  class="d-flex justify-center" style="margin: 20px;">
     <MudButton class="d-flex justify-center" Variant="Variant.Filled" Color="Color.Primary">Iniciar Troca</MudButton>
     </div>
    

     @if (trades.Count <= 0)
     {
                <p class="d-flex justify-center" style="margin: 20px;">VOCÊ NÃO TEM NENHUMA PROPOSTA NO MOMENTO</p>
     } else
     {
     <div  class="d-flex justify-center" style="margin: 20px;">
      <MudSimpleTable Style="overflow-x: auto;">
            <thead>
                <tr>
                    @foreach (var h in headings)
                    {
                        <th>@h</th>
                    }
                </tr>
            </thead>
            <tbody>
                    <tr>
                        @foreach (var trade in trades)
                        {
                            <td><MudAvatar Style="vertical-align: middle; background: none" Image=@($"Images/logos/{trade.TeamOneName}.svg")/></td>
                            <td><MudAvatar Style="vertical-align: middle; background: none" Image=@($"Images/logos/{trade.TeamTwoName}.svg")/></td>
                            <td>
                               @if (trade.Response == null)
                               {
                                 <MudAvatar Style="vertical-align: middle; background: none" >
                                 <MudIconButton Href="@string.Format("/tradeoffer/{0}", trade.Id)"  Color="Color.Primary" Icon="@Icons.Material.TwoTone.HourglassBottom" Size="Size.Medium" />
                                 </MudAvatar>
                               } else if (trade.Response == true)
                               {
                                 <MudAvatar Style="vertical-align: middle; background: none">
                                 <MudIconButton Href="@string.Format("/tradeoffer/{0}", trade.Id)"  Color="Color.Success" Icon="@Icons.Material.Filled.Check" Size="Size.Medium" />
                                 </MudAvatar>
                               } else
                               {
                                 <MudAvatar Style="vertical-align: middle; background: none">
                                 <MudIconButton Href="@string.Format("/tradeoffer/{0}", trade.Id)"  Color="Color.Error" Icon="@Icons.Material.Filled.Clear" Size="Size.Medium" />
                                 </MudAvatar>
                               }
                            </td>
                            <td><MudAvatar Style="vertical-align: middle; background: none">
                                 <MudIconButton  Color="Color.Error" Icon="@Icons.Material.Filled.Delete" Size="Size.Medium" />
                                 </MudAvatar>
                            </td> 
                        }
                    </tr>
            </tbody>
      </MudSimpleTable>
     </div>
     }
 </AuthorizeView>
 </CascadingAuthenticationState>
 </MudContainer>



@code {

      string[] headings = { "INIT", "WITH", "STATUS", "REMOVE"};

      private List<TradeDto> trades = new List<TradeDto>();

      private string message = string.Empty;

         protected override async Task OnInitializedAsync()
         {
                message = "Carregando Trocas...";

                var result = await TradeService.GetTradeByTeamId();
                if (!result.Success)
                {
                    message = result.Message;
                }
                else
                {
                    trades = result.Data;
                }
         }


}
