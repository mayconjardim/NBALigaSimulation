@page "/teams/rotation"
@using NBALigaSimulation.Client.Utilities
@attribute [Authorize]
@inject IAuthService AuthService
@inject ITeamService TeamService
@inject IPlayerService PlayerService
@inject NavigationManager NavigationManager
@inject ILocalStorageService LocalStorage
@inject IJSRuntime JSRuntime;

@if (_team != null)
{
<CascadingAuthenticationState>
  <AuthorizeView>
    <div class="container">
      
      <div class="title"><h5></h5></div>

      <div class="table-responsive">
        <table class="table" id="statsTable">
          <thead>
          <tr>
            <td style="background-color: white">NAME
              <i class="bi bi-question-square-fill " style="margin-left: 5px" type="button"  data-bs-toggle="modal" data-bs-target="#sub"></i>
              </td>
            <td>POS</td>
            <td>AGE</td>
            <td>OVR</td>
            <td>POT</td>
            <td>CONTRACT</td>
            <td>GP</td>
            <td>MIN</td>
            <td>PPG</td>
            <td>RPG</td>
            <td>APG</td>
            <td>TS%</td>
            <td style="display: flex">PT
              <i class="bi bi-question-square-fill " style="margin-left: 5px" type="button"  data-bs-toggle="modal" data-bs-target="#rotation"></i>
              </td>
          </tr>
          </thead>
          <tbody>
          @foreach (var player in _players  )
          {
            <tr>
              <td style="text-align: left; background-color: white">
                @if (_players.IndexOf(player) < 5)
                {
                  <button class="btn" style="background-color: var(--primary-color); color: white; font-size: 0.650rem;" @onclick="(e) => ChangeRosterOrder(player)">TIT</button>
                  <a href="@($"players/{player.Id}")" style="margin-left: 5px;">@Util.NomeAbvr(player.Name)</a>
                }
                else
                {
                  <button  class="btn btn-secondary" style="font-size: 0.650rem;" @onclick="(e) => ChangeRosterOrder(player)">RES</button>
                  <a href="@($"players/{player.Id}")" style="margin-left: 5px;">@Util.NomeAbvr(player.Name)</a>
                }
              </td>
              <td>@player.Pos</td>
              <td>@Util.Age(_season, player.Born.Year)</td>
              <td>
                @(player.Ratings?.LastOrDefault()?.CalculateOvr.ToString() ?? "-")
              </td>
              <td>
                @(player.Ratings?.LastOrDefault()?.Pot.ToString() ?? "-")
              </td>
              <td>$6.80M até 2014</td>
              <td>
                @(player.RegularStats?.LastOrDefault()?.Games.ToString() ?? "-")
              </td>
              <td>@(player.RegularStats?.LastOrDefault()?.MinPG.ToString() ?? "-")</td>
              <td>@(player.RegularStats?.LastOrDefault()?.PtsPG.ToString() ?? "-")</td>
              <td>@(player.RegularStats?.LastOrDefault()?.TRebPG.ToString() ?? "-")</td>
              <td>@(player.RegularStats?.LastOrDefault()?.AstPG.ToString() ?? "-")</td>
              <td>@(player.RegularStats?.LastOrDefault()?.TrueShooting.ToString() ?? "-")</td>
              <td >
                <select style="background: @Util.GetPtBackground(player.PtModifier)" class="form-select form-select-sm timer" id="ptModifierSelect" bind="@player.PtModifier" @onchange="@(e => UpdatePtModifier(e.Value, player.Id))">
                  <option selected hidden>@GetOptionLabel(@player.PtModifier)</option>
                  @foreach (var pt in PtOptions)
                  {
                    <option value="@pt">@GetOptionLabel(pt)</option>
                  }
                </select>

              </td>
            </tr>
            @if (_players.IndexOf(player) == 4)
            {
              <tr class="thin-border"> 
                <td colspan="14" style="height: 1px"></td>
              </tr>
            }
          }
          </tbody>
        </table>
      </div>
    </div>


    <div class="modal fade" id="rotation" tabindex="-1" aria-labelledby="rotation" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Controle de minutos</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <p>
              O jogo dividirá o tempo de jogo com base na habilidade e (endurance).
              Se você quiser influenciar o julgamento dele, suas opções são:</p>
            <p style="background: red; color: white">0 Sem tempo de jogo</p>
            <p style="background: yellow; color: black">- Menos tempo de jogo</p>
            <p style="background: grey; color: black">&nbsp; &nbsp; Deixe o jogo decidir</p>
            <p style="background: blue; color: white">+ Mais tempo de jogo</p>
            <p style="background: greenyellow; color: black">++ Muito Mais tempo de jogo</p>
            <p style="background: green; color: white">+++ Jogará o máximo que o jogador aguentar (Endurance)</p>
          </div>
     
        </div>
      </div>
    </div>

    <div class="modal fade" id="sub" tabindex="-1" aria-labelledby="sub" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h1 class="modal-title fs-5" id="exampleModalLabel">Substituição de jogadores</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <p>
              Clique no ícone à esquerda para selecionar o jogador que deseja substituir
              Em seguida clique no mesmo ícone do jogador que deseja levar ao time titular
            </p>
          </div>

        </div>
      </div>
    </div>
    
  </AuthorizeView>
</CascadingAuthenticationState>

}