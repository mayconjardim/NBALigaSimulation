// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NBALigaSimulation.Server.Data;

#nullable disable

namespace NBALigaSimulation.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240406145504_addWeekGame")]
    partial class addWeekGame
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Drafts.Draft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Original")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Pick")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Drafts");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Drafts.DraftLottery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FifthTeam")
                        .HasColumnType("TEXT");

                    b.Property<int>("FifthTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FirstTeam")
                        .HasColumnType("TEXT");

                    b.Property<int>("FirstTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FourthTeam")
                        .HasColumnType("TEXT");

                    b.Property<int>("FourthTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecondTeam")
                        .HasColumnType("TEXT");

                    b.Property<int>("SecondTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SixthTeam")
                        .HasColumnType("TEXT");

                    b.Property<int>("SixthTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ThirdTeam")
                        .HasColumnType("TEXT");

                    b.Property<int>("ThirdTeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DraftLotteries");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.FA.FAOffer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Response")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Years")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamId");

                    b.ToTable("FAOffers");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.GameNews.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("Winner")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("GameNews");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Games.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AwayTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Happened")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HomeTeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeasonId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Week")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("College")
                        .HasColumnType("TEXT");

                    b.Property<int>("Hgt")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ImgUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("KeyPlayer")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Pos")
                        .HasColumnType("TEXT");

                    b.Property<double>("PtModifier")
                        .HasColumnType("REAL");

                    b.Property<int>("RosterOrder")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Weight")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerAwards", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apg")
                        .HasColumnType("TEXT");

                    b.Property<string>("Award")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bpg")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Ppg")
                        .HasColumnType("TEXT");

                    b.Property<string>("Rpg")
                        .HasColumnType("TEXT");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Spg")
                        .HasColumnType("TEXT");

                    b.Property<string>("Team")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerAwards");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerContract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Amount")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId")
                        .IsUnique();

                    b.ToTable("PlayerContracts");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerGameStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ast")
                        .HasColumnType("INTEGER");

                    b.Property<double>("BenchTime")
                        .HasColumnType("REAL");

                    b.Property<int>("Blk")
                        .HasColumnType("INTEGER");

                    b.Property<double>("CourtTime")
                        .HasColumnType("REAL");

                    b.Property<int>("Drb")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Energy")
                        .HasColumnType("REAL");

                    b.Property<int>("Fg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fga")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fta")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("GameDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gs")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Min")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OppAbrev")
                        .HasColumnType("TEXT");

                    b.Property<int>("Orb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pf")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pos")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pts")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tov")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Trb")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerGameStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerPlayoffsStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ast")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Drb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fga")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Games")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gs")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Min")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Orb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pf")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pts")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stl")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamAbrv")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tov")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Trb")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerPlayoffsStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerRatings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Diq")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Dnk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Drb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Endu")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Hgt")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Jmp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Oiq")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pot")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pss")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Reb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Spd")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stre")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tp")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerRatings");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerRegularStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ast")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Drb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fga")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Games")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Gs")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Min")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Orb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pf")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Pos")
                        .HasColumnType("TEXT");

                    b.Property<int>("Pts")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stl")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TeamAbrv")
                        .HasColumnType("TEXT");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tov")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Trb")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerRegularStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.SeasonPlayoffs.Playoffs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("Complete")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeriesId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamOneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamTwoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WinsTeamOne")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WinsTeamTwo")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamOneId");

                    b.HasIndex("TeamTwoId");

                    b.ToTable("Playoffs");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.SeasonPlayoffs.PlayoffsGame", b =>
                {
                    b.Property<int>("PlayoffsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayoffsId", "GameId");

                    b.HasIndex("GameId");

                    b.ToTable("PlayoffGames");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Seasons.Season", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DeadlineCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("DraftCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FirstRoundCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("FourthRoundCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LotteryCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("RegularCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SecondRoundCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TcCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ThirdRoundCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Abrv")
                        .HasColumnType("TEXT");

                    b.Property<int>("Championships")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conference")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsHuman")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamDraftPicks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Original")
                        .HasColumnType("TEXT");

                    b.Property<int>("Round")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamDraftPicks");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamGameStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ast")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Drb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fg")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fga")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaAtRim")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaLowPost")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FgaMidRange")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Ft")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fta")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GameId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Min")
                        .HasColumnType("REAL");

                    b.Property<int>("Orb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pf")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pts")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Stl")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tov")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Tpa")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Trb")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamGameStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamGameplan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Defense")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Focus")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Motion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Pace")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("TeamGameplans");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamPlayoffsStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allowed3PA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allowed3PM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedAssists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedBlocks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFGA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFGM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFTA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFTM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedRebounds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedStealS")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedTurnovers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blocks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FGA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FGM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FTA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FTM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayoffLosses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayoffWins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rebounds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Steals")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TPA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TPM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Turnovers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamPlayoffsStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamRegularStats", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allowed3PA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Allowed3PM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedAssists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedBlocks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFGA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFGM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFTA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFTM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedFouls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedPoints")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedRebounds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedStealS")
                        .HasColumnType("INTEGER");

                    b.Property<int>("AllowedTurnovers")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Assists")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Blocks")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConfRank")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FGA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FGM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FTA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FTM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Fouls")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HomeLosses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HomeWins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayoffLosses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayoffWins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Points")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rebounds")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoadLosses")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoadWins")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Steals")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Streak")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TPA")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TPM")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Turnovers")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("TeamRegularStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Trades.Trade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("LastModified")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("Response")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamOneId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamTwoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("TeamOneId");

                    b.HasIndex("TeamTwoId");

                    b.ToTable("Trades");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Trades.TradePicks", b =>
                {
                    b.Property<int>("DraftPickId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TradePickId")
                        .HasColumnType("INTEGER");

                    b.HasKey("DraftPickId", "TradePickId");

                    b.HasIndex("TradePickId");

                    b.ToTable("TradePicks");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Trades.TradePlayer", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TradePlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId", "TradePlayerId");

                    b.HasIndex("TradePlayerId");

                    b.ToTable("TradePlayer");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataCreated")
                        .HasColumnType("TEXT");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("BLOB");

                    b.Property<int?>("TeamId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TeamId")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Drafts.Draft", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.FA.FAOffer", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Games.Game", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "AwayTeam")
                        .WithMany()
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "HomeTeam")
                        .WithMany()
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Seasons.Season", "Season")
                        .WithMany("Games")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AwayTeam");

                    b.Navigation("HomeTeam");

                    b.Navigation("Season");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.Player", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("NBALigaSimulation.Shared.Models.Players.Born", "Born", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Loc")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Year")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.OwnsOne("NBALigaSimulation.Shared.Models.Players.PlayerDraft", "Draft", b1 =>
                        {
                            b1.Property<int>("PlayerId")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Pick")
                                .HasColumnType("INTEGER");

                            b1.Property<int>("Round")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("Team")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Year")
                                .HasColumnType("INTEGER");

                            b1.HasKey("PlayerId");

                            b1.ToTable("Players");

                            b1.WithOwner()
                                .HasForeignKey("PlayerId");
                        });

                    b.Navigation("Born");

                    b.Navigation("Draft");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerAwards", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithMany("PlayerAwards")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerContract", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithOne("Contract")
                        .HasForeignKey("NBALigaSimulation.Shared.Models.Players.PlayerContract", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerGameStats", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Games.Game", "Game")
                        .WithMany("PlayerGameStats")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", null)
                        .WithMany("Stats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerPlayoffsStats", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithMany("PlayoffsStats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerRatings", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithMany("Ratings")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.PlayerRegularStats", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithMany("RegularStats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.SeasonPlayoffs.Playoffs", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "TeamOne")
                        .WithMany()
                        .HasForeignKey("TeamOneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "TeamTwo")
                        .WithMany()
                        .HasForeignKey("TeamTwoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TeamOne");

                    b.Navigation("TeamTwo");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.SeasonPlayoffs.PlayoffsGame", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Games.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.SeasonPlayoffs.Playoffs", "Playoffs")
                        .WithMany("PlayoffGames")
                        .HasForeignKey("PlayoffsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Playoffs");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamDraftPicks", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithMany("DraftPicks")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamGameStats", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Games.Game", "Game")
                        .WithMany("TeamGameStats")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", null)
                        .WithMany("Stats")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamGameplan", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithOne("Gameplan")
                        .HasForeignKey("NBALigaSimulation.Shared.Models.Teams.TeamGameplan", "TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamPlayoffsStats", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithMany("TeamPlayoffsStats")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.TeamRegularStats", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithMany("TeamRegularStats")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Trades.Trade", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "TeamOne")
                        .WithMany()
                        .HasForeignKey("TeamOneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "TeamTwo")
                        .WithMany()
                        .HasForeignKey("TeamTwoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("TeamOne");

                    b.Navigation("TeamTwo");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Trades.TradePicks", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.TeamDraftPicks", "DraftPick")
                        .WithMany()
                        .HasForeignKey("DraftPickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Trades.Trade", "Trade")
                        .WithMany("TradePicks")
                        .HasForeignKey("TradePickId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DraftPick");

                    b.Navigation("Trade");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Trades.TradePlayer", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Players.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NBALigaSimulation.Shared.Models.Trades.Trade", "Trade")
                        .WithMany("TradePlayers")
                        .HasForeignKey("TradePlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Trade");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Users.User", b =>
                {
                    b.HasOne("NBALigaSimulation.Shared.Models.Teams.Team", "Team")
                        .WithOne()
                        .HasForeignKey("NBALigaSimulation.Shared.Models.Users.User", "TeamId");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Games.Game", b =>
                {
                    b.Navigation("PlayerGameStats");

                    b.Navigation("TeamGameStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Players.Player", b =>
                {
                    b.Navigation("Contract");

                    b.Navigation("PlayerAwards");

                    b.Navigation("PlayoffsStats");

                    b.Navigation("Ratings");

                    b.Navigation("RegularStats");

                    b.Navigation("Stats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.SeasonPlayoffs.Playoffs", b =>
                {
                    b.Navigation("PlayoffGames");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Seasons.Season", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Teams.Team", b =>
                {
                    b.Navigation("DraftPicks");

                    b.Navigation("Gameplan");

                    b.Navigation("Players");

                    b.Navigation("Stats");

                    b.Navigation("TeamPlayoffsStats");

                    b.Navigation("TeamRegularStats");
                });

            modelBuilder.Entity("NBALigaSimulation.Shared.Models.Trades.Trade", b =>
                {
                    b.Navigation("TradePicks");

                    b.Navigation("TradePlayers");
                });
#pragma warning restore 612, 618
        }
    }
}
